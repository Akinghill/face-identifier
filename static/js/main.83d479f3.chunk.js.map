{"version":3,"sources":["components/Navigation/Navigation.jsx","components/ImageLinkForm/ImageLinkForm.jsx","components/FaceRecognition/FaceRecognition.jsx","components/UserInfo/UserInfo.jsx","components/Signin/Signin.jsx","components/Register/Register.jsx","App.js","serviceWorker.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","color","className","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","FaceRecognition","imageUrl","box","id","src","alt","width","height","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","UserInfo","name","entries","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","this","htmlFor","React","Component","Register","onNameChange","onSubmitRegister","e","preventDefault","partcleOptions","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","console","log","err","params","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"oOAmCeA,EAjCI,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cACpB,OADoD,EAAjBC,WAG/B,yBAAKC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,aAC7C,uBACEC,QAAS,kBAAML,EAAc,WAC7BE,MAAO,CAAEI,MAAO,SAChBC,UAAU,2CAHZ,aAUF,yBAAKL,MAAO,CAAEC,QAAS,OAAQC,eAAgB,aAC7C,uBACEC,QAAS,kBAAML,EAAc,WAC7BE,MAAO,CAAEI,MAAO,SAChBC,UAAU,2CAHZ,WAMA,uBACEF,QAAS,kBAAML,EAAc,aAC7BE,MAAO,CAAEI,MAAO,SAChBC,UAAU,2CAHZ,cCpBKC,G,MAAgB,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,eAC7C,OACE,6BACE,uBAAGH,UAAU,YAAb,oDAGA,yBAAKA,UAAU,UACb,yBAAKA,UAAU,gCACb,2BAAOA,UAAU,qBAAqBI,KAAK,OAAOC,SAAUH,IAC5D,4BAAQF,UAAU,yDAAyDF,QAASK,GAApF,eCTGG,G,MAAkB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,IAC1C,OACE,yBAAKR,UAAU,aACb,yBAAKA,UAAU,gBACb,yBAAKS,GAAG,aAAaC,IAAKH,EAAUI,IAAI,GAAGC,MAAM,QAAQC,OAAO,SAChE,yBACEb,UAAU,eACVL,MAAO,CAAEmB,IAAKN,EAAIO,OAAQC,MAAOR,EAAIS,SAAUC,OAAQV,EAAIW,UAAWC,KAAMZ,EAAIa,eCR7EC,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QAC/B,OACE,yBAAKxB,UAAU,UACb,yBAAKA,UAAU,YACb,oCACSuB,EADT,KACgB,6BADhB,iCAEgC,8BAAOC,OC6EhCC,E,kDAlFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAORC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SATzB,EAYnBC,iBAAmB,SAACL,GAClB,EAAKC,SAAS,CAAEK,eAAgBN,EAAMG,OAAOC,SAb5B,EAgBnBG,eAAiB,WACfC,MAAM,iDAAkD,CACtDC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBC,MAAO,EAAKC,MAAMb,YAClBc,SAAU,EAAKD,MAAMT,mBAGtBW,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACAA,EAAKvC,KACP,EAAKiB,MAAMuB,SAASD,GACpB,EAAKtB,MAAMjC,cAAc,aA3B/B,EAAKkD,MAAQ,CACXb,YAAa,GACbI,eAAgB,IAJD,E,qDAkCT,IACAzC,EAAkByD,KAAKxB,MAAvBjC,cACR,OACE,6BAASO,UAAU,gFACjB,0BAAMA,UAAU,gBACd,yBAAKA,UAAU,WACb,8BAAUS,GAAG,UAAUT,UAAU,6BAC/B,4BAAQA,UAAU,kBAAlB,WACA,yBAAKA,UAAU,OACb,2BAAOA,UAAU,oBAAoBmD,QAAQ,iBAA7C,SACA,2BACEnD,UAAU,qEACVI,KAAK,QACLmB,KAAK,gBACLd,GAAG,gBACHJ,SAAU6C,KAAKvB,iBAGnB,yBAAK3B,UAAU,OACb,2BAAOA,UAAU,oBAAoBmD,QAAQ,YAA7C,YACA,2BACEnD,UAAU,uEACVI,KAAK,WACLmB,KAAK,WACLd,GAAG,WACHJ,SAAU6C,KAAKjB,qBAIrB,yBAAKjC,UAAU,IACb,2BACEF,QAASoD,KAAKf,eACdnC,UAAU,uEACVI,KAAK,SACL4B,MAAM,aAGV,yBAAKhC,UAAU,eACb,uBAAGF,QAAS,kBAAML,EAAc,aAAaO,UAAU,gCAAvD,oB,GAzEOoD,IAAMC,WCiFZC,E,kDAhFb,WAAY5B,GAAQ,IAAD,8BACjB,cAAMA,IAQRC,cAAgB,SAACC,GACf,EAAKC,SAAS,CACZa,MAAOd,EAAMG,OAAOC,SAXL,EAcnBC,iBAAmB,SAACL,GAClB,EAAKC,SAAS,CACZe,SAAUhB,EAAMG,OAAOC,SAhBR,EAmBnBuB,aAAe,SAAC3B,GACd,EAAKC,SAAS,CACZN,KAAMK,EAAMG,OAAOC,SArBJ,EAyBnBwB,iBAAmB,SAACC,GAClBA,EAAEC,iBACFtB,MAAM,mDAAoD,CACxDC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACnBC,MAAO,EAAKC,MAAMD,MAClBE,SAAU,EAAKD,MAAMC,SACrBrB,KAAM,EAAKoB,MAAMpB,SAGlBsB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACAA,EAAKvC,KACP,EAAKiB,MAAMuB,SAASD,GACpB,EAAKtB,MAAMjC,cAAc,aAtC/B,EAAKkD,MAAQ,CACXD,MAAO,GACPE,SAAU,GACVrB,KAAM,IALS,E,qDA8CjB,OACE,6BAASvB,UAAU,gFACjB,0BAAMA,UAAU,gBACd,0BAAMA,UAAU,WACd,8BAAUS,GAAG,UAAUT,UAAU,6BAC/B,4BAAQA,UAAU,kBAAlB,YACA,yBAAKA,UAAU,OACb,2BAAOA,UAAU,oBAAoBmD,QAAQ,QAA7C,QACA,2BAAO9C,SAAU6C,KAAKK,aAAcvD,UAAU,qEAAqEI,KAAK,OAAOmB,KAAK,OAAOd,GAAG,UAEhJ,yBAAKT,UAAU,OACb,2BAAOA,UAAU,oBAAoBmD,QAAQ,iBAA7C,SACA,2BAAO9C,SAAU6C,KAAKvB,cAAe3B,UAAU,qEAAqEI,KAAK,QAAQmB,KAAK,gBAAgBd,GAAG,mBAE3J,yBAAKT,UAAU,OACb,2BAAOA,UAAU,oBAAoBmD,QAAQ,YAA7C,YACA,2BAAO9C,SAAU6C,KAAKjB,iBAAkBjC,UAAU,uEAAuEI,KAAK,WAAWmB,KAAK,WAAWd,GAAG,eAGhK,yBAAKT,UAAU,IACb,2BACEF,QAASoD,KAAKM,iBACdxD,UAAU,uEACVI,KAAK,SACL4B,MAAM,qB,GAvECoB,IAAMC,W,iBCQvBM,G,OAAiB,CACrB,UAAa,CACX,OAAU,CACR,MAAS,IAEX,KAAQ,CACN,MAAS,MAKTC,EAAe,CACnBC,MAAO,GACPtD,SAAU,GACVC,IAAK,GACLsD,MAAO,SACPpE,YAAY,EACZsD,KAAM,CACJvC,GAAI,GACJc,KAAM,GACNmB,MAAO,GACPlB,QAAS,EACTuC,OAAQ,KAiHGC,E,kDA5Gb,aAAe,IAAD,8BACZ,gBAIFf,SAAW,SAACgB,GACV,EAAKpC,SAAS,CACZmB,KAAM,CACJvC,GAAIwD,EAAKxD,GACTc,KAAM0C,EAAK1C,KACXmB,MAAOuB,EAAKvB,MACZlB,QAASyC,EAAKzC,QACduC,OAAQE,EAAKF,WAZL,EAiBdG,sBAAwB,SAACD,GACvB,IAAME,EAAeF,EAAKG,QAAQ,GAAGH,KAAKI,QAAQ,GAAGC,YAAYC,aAC3DC,EAAQC,SAASC,eAAe,cAChC9D,EAAQ+D,OAAOH,EAAM5D,OACrBC,EAAS8D,OAAOH,EAAM3D,QAC5B,MAAO,CACLQ,QAAS8C,EAAaS,SAAWhE,EACjCG,OAAQoD,EAAaU,QAAUhE,EAC/BI,SAAUL,EAASuD,EAAaW,UAAYlE,EAC5CO,UAAWN,EAAUsD,EAAaY,WAAalE,IA1BrC,EA8BdmE,eAAiB,SAACxE,GAChB,EAAKqB,SAAS,CAAErB,IAAKA,KA/BT,EAkCdN,cAAgB,SAACuD,GACf,EAAK5B,SAAS,CAAEgC,MAAOJ,EAAE1B,OAAOC,SAnCpB,EAsCd7B,eAAiB,WACf,EAAK0B,SAAS,CAACtB,SAAU,EAAKoC,MAAMkB,QAClCzB,MAAM,mDAAoD,CACxDC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACnBoB,MAAO,EAAKlB,MAAMkB,UAGrBhB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACAA,GACFV,MAAM,gDAAiD,CACrDC,OAAQ,MACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACnBhC,GAAI,EAAKkC,MAAMK,KAAKvC,OAGrBoC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAoC,GACJ,EAAKpD,SAASqD,OAAOC,OAAO,EAAKxC,MAAMK,KAAM,CAAExB,QAASyD,QAEzDG,MAAMC,QAAQC,KAGnB,EAAKN,eAAe,EAAKd,sBAAsBpB,OAEhDsC,OAAM,SAAAG,GAAG,OAAIF,QAAQC,IAAIC,OAlEhB,EAqEd9F,cAAgB,SAACqE,GACD,YAAVA,EACF,EAAKjC,SAAS,CAAC+B,iBACI,SAAVE,GACT,EAAKjC,SAAS,CAAEnC,YAAY,IAE9B,EAAKmC,SAAS,CAAEiC,WAzEhB,EAAKnB,MAAQiB,EAFD,E,qDA8EJ,IAAD,EACsCV,KAAKP,MAA1CjD,EADD,EACCA,WAAYa,EADb,EACaA,SAAUuD,EADvB,EACuBA,MAAOtD,EAD9B,EAC8BA,IACrC,OACE,yBAAKR,UAAU,OACb,kBAAC,IAAD,CACEA,UAAU,WACVwF,OAAQ7B,IACV,kBAAC,EAAD,CAAYlE,cAAeyD,KAAKzD,cAAeC,WAAYA,IAChD,WAAVoE,EAAqB,kBAAC,EAAD,CAAQb,SAAUC,KAAKD,SAAUxD,cAAeyD,KAAKzD,gBAC7D,aAAVqE,EAAuB,kBAAC,EAAD,CAAUb,SAAUC,KAAKD,SAAUxD,cAAeyD,KAAKzD,gBAC5E,6BAEA,kBAAC,EAAD,CACE8B,KAAM2B,KAAKP,MAAMK,KAAKzB,KACtBC,QAAS0B,KAAKP,MAAMK,KAAKxB,UAE3B,kBAAC,EAAD,CACEtB,cAAegD,KAAKhD,cACpBC,eAAgB+C,KAAK/C,iBAEvB,kBAAC,EAAD,CAAiBK,IAAKA,EAAKD,SAAUA,U,GAnGjC8C,aCxBEoC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFvB,SAASC,eAAe,SDuHpB,kBAAmBuB,WACrBA,UAAUC,cAAcC,MACrBtD,MAAK,SAAAuD,GACJA,EAAaC,gBAEdjB,OAAM,SAAAkB,GACLjB,QAAQiB,MAAMA,EAAMC,a","file":"static/js/main.83d479f3.chunk.js","sourcesContent":["import React from 'react'\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n  if (isSignedIn) {\n    return (\n      <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\n        <p\n          onClick={() => onRouteChange('signin')}\n          style={{ color: 'white' }}\n          className=\"f3 link dim black underline pa3 pointer\">\n          Sign Out\n      </p>\n      </nav>\n    )\n  } else {\n    return (\n      <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\n        <p\n          onClick={() => onRouteChange('signin')}\n          style={{ color: 'white' }}\n          className=\"f3 link dim black underline pa3 pointer\">\n          Sign in\n        </p>\n        <p\n          onClick={() => onRouteChange('register')}\n          style={{ color: 'white' }}\n          className=\"f3 link dim black underline pa3 pointer\">\n          Register\n        </p>\n      </nav>\n    )\n  }\n\n}\n\nexport default Navigation","import React from 'react'\nimport './imageLinkForm.css'\n\nexport const ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\n  return (\n    <div>\n      <p className=\"f3 white\">\n        Enter an image url and the ai will detect faces.\n      </p>\n      <div className=\"center\">\n        <div className=\"form center pa4 br3 shadow-5\">\n          <input className=\"f4 pa2 w-70 center\" type=\"text\" onChange={onInputChange} />\n          <button className=\"detect-btn grow f4 link ph3 pv2 dib white bg-blue w-30\" onClick={onButtonSubmit}>Detect</button>\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react'\nimport './faceRecognition.css'\n\nexport const FaceRecognition = ({ imageUrl, box }) => {\n  return (\n    <div className='center ma'>\n      <div className='absolute mt2'>\n        <img id=\"inputimage\" src={imageUrl} alt=\"\" width='500px' height='auto'/>\n        <div \n          className=\"bounding-box\" \n          style={{ top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol }}\n          >\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react'\n\nexport const UserInfo = ({ name, entries}) => {\n  return (\n    <div className='center'>\n      <div className=\"white f3\">\n        <p>\n          Hello {name}. <br />\n          Your current entries count is <span>{entries}</span>\n        </p>\n      </div>\n    </div>\n  )\n}","import React from 'react';\n\nclass Signin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signInEmail: '',\n      signInPassword: ''\n    }\n  }\n\n  onEmailChange = (event) => {\n    this.setState({ signInEmail: event.target.value })\n  }\n\n  onPasswordChange = (event) => {\n    this.setState({ signInPassword: event.target.value })\n  }\n\n  onSubmitSignIn = () => {\n    fetch('https://vast-ravine-27631.herokuapp.com/signin', {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        email: this.state.signInEmail,\n        password: this.state.signInPassword\n      })\n    })\n      .then(response => response.json())\n      .then(user => {\n        if (user.id) {\n          this.props.loadUser(user)\n          this.props.onRouteChange('home');\n        }\n      })\n  }\n\n  render() {\n    const { onRouteChange } = this.props\n    return (\n      <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 center shadow-5 mt0\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f4 fw6 ph0 mh0\">Sign In</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  onChange={this.onEmailChange}\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                <input\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={this.onPasswordChange}\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onSubmitSignIn}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Sign in\"\n              />\n            </div>\n            <div className=\"lh-copy mt3\">\n              <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\n            </div>\n          </div>\n        </main>\n      </article>\n    )\n  }\n\n}\n\nexport default Signin","import React from 'react'\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      email: '',\n      password: '',\n      name: ''\n    }\n  }\n\n  onEmailChange = (event) => {\n    this.setState({\n      email: event.target.value\n    })\n  }\n  onPasswordChange = (event) => {\n    this.setState({\n      password: event.target.value\n    })\n  }\n  onNameChange = (event) => {\n    this.setState({\n      name: event.target.value\n    })\n  }\n\n  onSubmitRegister = (e) => {\n    e.preventDefault()\n    fetch('https://vast-ravine-27631.herokuapp.com/register', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n        name: this.state.name\n      })\n    })\n      .then(response => response.json())\n      .then(user => {\n        if (user.id) {\n          this.props.loadUser(user)\n          this.props.onRouteChange('home');\n        }\n      })\n  }\n\n  render() {\n    return (\n      <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 center shadow-5 mt0\">\n        <main className=\"pa4 black-80\">\n          <form className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f4 fw6 ph0 mh0\">Register</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                <input onChange={this.onNameChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\" id=\"name\" />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                <input onChange={this.onEmailChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\" id=\"email-address\" />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                <input onChange={this.onPasswordChange} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\" id=\"password\" />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onSubmitRegister}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Register\"\n              />\n            </div>\n          </form>\n        </main>\n      </article>\n    )\n  }\n}\n\nexport default Register","import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation'\nimport { ImageLinkForm } from './components/ImageLinkForm/ImageLinkForm'\nimport { FaceRecognition } from './components/FaceRecognition/FaceRecognition'\nimport { UserInfo } from './components/UserInfo/UserInfo'\nimport Signin from './components/Signin/Signin'\nimport Register from './components/Register/Register'\nimport Particles from 'react-particles-js'\nimport './App.css';\n\nconst partcleOptions = {\n  \"particles\": {\n    \"number\": {\n      \"value\": 50\n    },\n    \"size\": {\n      \"value\": 3\n    }\n  }\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = initialState\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage')\n    const width = Number(image.width)\n    const height = Number(image.height)\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box })\n  }\n\n  onInputChange = (e) => {\n    this.setState({ input: e.target.value })\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n      fetch('https://vast-ravine-27631.herokuapp.com/imageurl', {\n        method: 'post',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch('https://vast-ravine-27631.herokuapp.com/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count}))\n            })\n            .catch(console.log)\n\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({initialState})\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true })\n    }\n    this.setState({ route })\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state\n    return (\n      <div className=\"App\">\n        <Particles\n          className=\"particle\"\n          params={partcleOptions} />\n        <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn} />\n        {route === \"signin\" ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n          : route === \"register\" ? <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n            : <div>\n              {/* <Logo /> */}\n              <UserInfo\n                name={this.state.user.name}\n                entries={this.state.user.entries}\n              />\n              <ImageLinkForm\n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition box={box} imageUrl={imageUrl} />\n            </div>\n        }\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}